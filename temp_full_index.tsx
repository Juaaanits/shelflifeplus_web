import { useState, useEffect } from 'react';import { Leaf, BarChart3, Truck, AlertCircle, Menu, X, ArrowRight, CheckCircle, Shield, Zap, Sprout } from 'lucide-react';import { Button } from '@/components/ui/button';import { Card } from '@/components/ui/card';import { Badge } from '@/components/ui/badge';import { VegetableInput, Vegetable } from '@/components/VegetableInput';//import { CompatibilityAnalysis } from '@/components/CompatibilityAnalysis';import { TruckVisualizer } from '@/components/TruckVisualizer';import { ImpactMetrics } from '@/components/ImpactMetrics';import heroImage from '@/assets/hero-filipino-farmers.jpg';// Planning parameters typestype TruckType = 'ambient' | 'refrigerated' | 'ventilated';type TruckSize = 'small' | 'medium' | 'large';type TravelTime = 'early_morning' | 'daytime' | 'evening' | 'night';interface ScenarioMeta {  truckType: TruckType;  truckSize: TruckSize;  truckQuantity: number;  bestTravelTime: TravelTime;}const Index = () => {  const [vegetables, setVegetables] = useState<Vegetable[]>([]);  const [activeTab, setActiveTab] = useState<'input' | 'analysis' | 'layout' | 'impact'>('input');  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);  const [meta, setMeta] = useState<ScenarioMeta>({    truckType: 'refrigerated',    truckSize: 'medium',    truckQuantity: 1,    bestTravelTime: 'early_morning',  });  const handleVegetablesChange = (newVegetables: Vegetable[]) => {    setVegetables(newVegetables);    // Auto-advance to analysis tab when vegetables are added    if (newVegetables.length > 0 && activeTab === 'input') {      setActiveTab('analysis');    }  };  const getTotalQuantity = () => vegetables.reduce((sum, veg) => sum + veg.quantity, 0);  const capacityBySize: Record<TruckSize, number> = { small: 100, medium: 200, large: 400 };  const getTotalCapacity = () => capacityBySize[meta.truckSize] * Math.max(1, meta.truckQuantity);  const utilization = Math.round((getTotalQuantity() / Math.max(1, getTotalCapacity())) * 100);    const getCompatibilityStatus = () => {    if (vegetables.length < 2) return { status: 'neutral', text: 'Add more vegetables' };        // Quick compatibility check    for (let i = 0; i < vegetables.length; i++) {      for (let j = i + 1; j < vegetables.length; j++) {        const veg1 = vegetables[i];        const veg2 = vegetables[j];                const ethyleneConflict = (          (veg1.ethyleneProduction === 'high' && veg2.ethyleneSensitivity === 'high') ||          (veg2.ethyleneProduction === 'high' && veg1.ethyleneSensitivity === 'high')        );                if (ethyleneConflict) {          return { status: 'incompatible', text: 'Compatibility issues detected' };        }      }    }        return { status: 'compatible', text: 'All vegetables compatible' };  };  const compatibilityStatus = getCompatibilityStatus();  const scrollToDemo = () => {    document.getElementById('demo-section')?.scrollIntoView({ behavior: 'smooth' });  };  const scrollToFeatures = () => {    document.getElementById('features')?.scrollIntoView({ behavior: 'smooth' });  };  // Scenario persistence and sharing  const STORAGE_KEY = 'shelflife:scenario';  // On mount: load from share URL param or localStorage  useEffect(() => {    try {      const params = new URLSearchParams(window.location.search);      const s = params.get('s');      if (s) {        const decoded = JSON.parse(atob(s));        // Backward compatible: old links store array only        if (Array.isArray(decoded)) {          setVegetables(decoded);          setActiveTab('analysis');          return;        }        // New format: { vegetables, meta }        if (decoded && Array.isArray(decoded.vegetables)) {          setVegetables(decoded.vegetables);          if (decoded.meta) setMeta((prev) => ({ ...prev, ...decoded.meta }));          setActiveTab('analysis');          return;        }      }    } catch (e) {      // ignore malformed share links    }    try {      const saved = localStorage.getItem(STORAGE_KEY);      if (saved) {        const parsed = JSON.parse(saved);        if (Array.isArray(parsed)) {          // Backward compatible local save          setVegetables(parsed);        } else if (parsed && Array.isArray(parsed.vegetables)) {          setVegetables(parsed.vegetables);          if (parsed.meta) setMeta((prev) => ({ ...prev, ...parsed.meta }));        }      }    } catch (e) {      // ignore storage errors    }  }, []);  // Persist scenario on change  useEffect(() => {    try {      localStorage.setItem(        STORAGE_KEY,        JSON.stringify({ vegetables, meta })      );    } catch (e) {      // ignore storage errors    }  }, [vegetables, meta]);  const shareScenario = () => {    try {      const s = btoa(JSON.stringify({ vegetables, meta }));      // Clean base URL (no existing query/hash), add share param and jump hash      const url = new URL(window.location.origin + window.location.pathname);      url.searchParams.set('s', s);      url.hash = 'demo-section';      const shareUrl = url.toString();      if (navigator.clipboard && navigator.clipboard.writeText) {        navigator.clipboard.writeText(shareUrl);        alert('Shareable link copied to clipboard!');      } else {        prompt('Copy this shareable link:', shareUrl);      }    } catch (e) {      alert('Could not create share link.');    }  };  const resetScenario = () => {    setVegetables([]);    setMeta({      truckType: 'refrigerated',      truckSize: 'medium',      truckQuantity: 1,      bestTravelTime: 'early_morning',    });    try {      localStorage.removeItem(STORAGE_KEY);    } catch (e) {      // ignore    }    // Restore to clean base URL without query or hash    const clean = new URL(window.location.origin + window.location.pathname);    window.history.replaceState({}, '', clean);  };  return (    <div className="min-h-screen bg-background">      {/* Professional Mobile Header - Enlarged */}      <nav className="bg-white/95 backdrop-blur-sm border-b border-border sticky top-0 z-50 shadow-sm">        <div className="container mx-auto px-4 sm:px-6">          <div className="flex items-center justify-between h-20 lg:h-24">            {/* Logo - Enhanced with tagline */}            <div className="flex items-center gap-4">              <div className="p-3 bg-brand-forest rounded-xl shadow-md">                <img                   src="/transparent.svg"                   alt="ShelfLife+ Logo"                   className="w-6 h-6 sm:w-7 sm:h-7 object-contain"                />              </div>              <div className="flex flex-col">                <div className="flex items-center gap-3">                  <span className="text-xl sm:text-2xl lg:text-3xl font-bold text-brand-forest font-work-sans">SHELFLIFE+</span>                </div>                <p className="text-sm sm:text-base text-brand-teal font-medium tagline hidden sm:block italic">                  Smarter Transport, Fresher Harvests                </p>              </div>            </div>            {/* Desktop Navigation */}            <div className="hidden lg:flex items-center gap-8">              <a href="#features" className="text-muted-foreground hover:text-brand-forest font-medium text-base">Features</a>              <a href="#demo-section" className="text-muted-foreground hover:text-brand-forest font-medium text-base">Demo</a>              <a href="#benefits" className="text-muted-foreground hover:text-brand-forest font-medium text-base">Benefits</a>              <Button onClick={scrollToDemo} className="bg-brand-forest hover:bg-brand-teal text-white px-6 py-3 rounded-lg font-semibold shadow-lg">                Try Demo <ArrowRight className="w-4 h-4 ml-2" />              </Button>            </div>            {/* Mobile CTA + Menu */}            <div className="flex items-center gap-2 lg:hidden">                <Button                 onClick={scrollToFeatures}                size="sm"                className="bg-brand-forest hover:bg-brand-teal text-white px-4 py-2 text-sm font-semibold"              >                Demo              </Button>              <button                className="p-2 rounded-lg hover:bg-muted transition-smooth"                onClick={() => setMobileMenuOpen(!mobileMenuOpen)}              >                {mobileMenuOpen ? <X className="w-5 h-5" /> : <Menu className="w-5 h-5" />}              </button>            </div>          </div>          {/* Mobile Navigation Drawer */}          {mobileMenuOpen && (            <div className="lg:hidden py-6 border-t border-border bg-white/95 backdrop-blur-sm">              <div className="flex flex-col space-y-3">                <a                   href="#features"                   className="text-muted-foreground hover:text-fresh-green transition-smooth py-3 px-2 rounded-lg hover:bg-muted font-medium"                  onClick={() => setMobileMenuOpen(false)}                >                  Features                </a>                <a                   href="#demo-section"                   className="text-muted-foreground hover:text-fresh-green transition-smooth py-3 px-2 rounded-lg hover:bg-muted font-medium"                  onClick={() => setMobileMenuOpen(false)}                >                  Interactive Demo                </a>                <a                   href="#benefits"                   className="text-muted-foreground hover:text-fresh-green transition-smooth py-3 px-2 rounded-lg hover:bg-muted font-medium"                  onClick={() => setMobileMenuOpen(false)}                >                  Benefits                </a>                <div className="pt-2 border-t border-border">                  <Button                     onClick={() => {                      scrollToDemo();                      setMobileMenuOpen(false);                    }}                     className="w-full btn-primary"                  >                    Start Free Demo <ArrowRight className="w-4 h-4 ml-2" />                  </Button>                </div>              </div>            </div>          )}        </div>      </nav>      {/* Mobile-First Hero Section */}      <section className="relative overflow-hidden bg-gradient-to-br from-brand-forest via-brand-forest to-brand-teal min-h-[85vh] flex items-center">        {/* Subtle overlay for better text contrast */}        <div className="absolute inset-0 bg-gradient-to-b from-black/10 via-transparent to-black/20" />                <div className="relative container mx-auto px-4 sm:px-6 pt-6 pb-12 sm:pt-8 sm:pb-16 lg:pt-10 lg:pb-20">          <div className="grid lg:grid-cols-2 gap-8 lg:gap-12 items-center">            {/* Content - Mobile optimized */}            <div className="text-white space-y-6 sm:space-y-8 text-center lg:text-left">              <div className="space-y-4 sm:space-y-6">                <div className="inline-flex items-center gap-2 bg-white/10 backdrop-blur-sm px-4 py-2 rounded-full text-sm font-medium">                  <Sprout className="w-4 h-4" />                  <span>Innovation Rooted in Agriculture</span>                </div>                                <h1 className="text-3xl sm:text-4xl lg:text-5xl xl:text-6xl font-bold leading-tight font-work-sans">                  Reduce Vegetable                  <span className="block text-white/90">Waste by 40%</span>                </h1>                                <p className="text-xl sm:text-2xl text-white font-medium leading-relaxed max-w-xl mx-auto lg:mx-0 tagline sm:block italic">                  Smarter Transport, Fresher Harvests                </p>                                <p className="text-lg sm:text-xl text-white/90 leading-relaxed max-w-xl mx-auto lg:mx-0">                  AI-powered compatibility checking and smart transport planning                   for Philippine fresh produce logistics.                </p>              </div>                            {/* CTA Buttons - Mobile optimized */}              <div className="flex flex-col sm:flex-row gap-3 sm:gap-4 max-w-md mx-auto lg:mx-0">                <Button                   onClick={scrollToDemo}                  size="lg"                   className="bg-white text-brand-forest hover:bg-white/90 font-semibold shadow-lg w-full sm:w-auto"                >                  Try Demo Free <ArrowRight className="w-5 h-5 ml-2" />                </Button>                <Button                   onClick={scrollToFeatures}                  size="lg"                  className="bg-white text-brand-forest hover:bg-white/90 font-semibold shadow-lg w-full sm:w-auto"                >                  View Features                </Button>              </div>              {/* Features badges - Mobile friendly */}              <div className="flex flex-wrap justify-center lg:justify-start gap-4 sm:gap-6 pt-4">                {[                  { icon: CheckCircle, text: 'Ethylene Control' },                  { icon: CheckCircle, text: 'Temperature Zones' },                  { icon: CheckCircle, text: 'Smart Loading' }                ].map(({ icon: Icon, text }) => (                  <div key={text} className="flex items-center gap-2 bg-white/10 backdrop-blur-sm px-3 py-2 rounded-full">                    <Icon className="w-4 h-4 text-white" />                    <span className="text-sm sm:text-base text-white/90 font-medium">{text}</span>                  </div>                ))}              </div>            </div>                        {/* Hero Image - Mobile optimized */}            <div className="relative order-first lg:order-last">              <div className="relative rounded-2xl overflow-hidden shadow-2xl group">                <img                  src={heroImage}                  alt="Filipino farmers with fresh vegetables in modern agricultural logistics setting"                  className="                    w-full h-[300px] sm:h-[400px] lg:h-[500px] object-cover                    transition-transform duration-500 ease-out                    motion-safe:group-hover:scale-[1.03] motion-safe:group-hover:-translate-y-1                    will-change-transform                  "                />                <div className="absolute inset-0 bg-gradient-to-t from-fresh-green/30 via-transparent to-transparent" />                                {/* Floating stats card */}                <div className="                    absolute bottom-4 left-4 right-4 bg-white/95 backdrop-blur-sm rounded-xl p-4 shadow-lg                    transition-transform duration-500 ease-out motion-safe:group-hover:-translate-y-1                  ">                  <div className="grid grid-cols-3 gap-4 text-center">                    <div>                      <div className="text-xl sm:text-2xl font-bold text-fresh-green">40%</div>                      <div className="text-xs sm:text-sm text-muted-foreground">Less Waste</div>                    </div>                    <div>                      <div className="text-xl sm:text-2xl font-bold text-fresh-green">+3d</div>                      <div className="text-xs sm:text-sm text-muted-foreground">Shelf Life</div>                    </div>                    <div>                      <div className="text-xl sm:text-2xl font-bold text-fresh-green">25%</div>                      <div className="text-xs sm:text-sm text-muted-foreground">Cost Save</div>                    </div>                  </div>                </div>              </div>            </div>          </div>        </div>      </section>      {/* Features Section */}      <section id="features" className="py-16 lg:py-24 bg-muted/30">        <div className="container mx-auto px-4">          <div className="text-center mb-16">            <h2 className="text-3xl lg:text-4xl font-bold text-foreground mb-4">              Biologically Aware Logistics            </h2>            <p className="text-xl text-muted-foreground max-w-2xl mx-auto">              Advanced agricultural science meets modern logistics technology            </p>          </div>          <div className="grid md:grid-cols-3 gap-8">            <Card className="p-8 text-center hover:shadow-lg transition-shadow">              <div className="w-16 h-16 bg-fresh-green/10 rounded-full flex items-center justify-center mx-auto mb-6">                <Shield className="w-8 h-8 text-fresh-green" />              </div>              <h3 className="text-xl font-semibold mb-4">Compatibility Check</h3>              <p className="text-muted-foreground">                AI-powered analysis prevents ethylene conflicts and incompatible vegetable pairings              </p>            </Card>            <Card className="p-8 text-center hover:shadow-lg transition-shadow">              <div className="w-16 h-16 bg-fresh-green/10 rounded-full flex items-center justify-center mx-auto mb-6">                <Truck className="w-8 h-8 text-fresh-green" />              </div>              <h3 className="text-xl font-semibold mb-4">Smart Transport</h3>              <p className="text-muted-foreground">                Optimal truck configurations and routing based on vegetable requirements              </p>            </Card>            <Card className="p-8 text-center hover:shadow-lg transition-shadow">              <div className="w-16 h-16 bg-fresh-green/10 rounded-full flex items-center justify-center mx-auto mb-6">                <Zap className="w-8 h-8 text-fresh-green" />              </div>              <h3 className="text-xl font-semibold mb-4">Real-time Impact</h3>              <p className="text-muted-foreground">                Track waste reduction, shelf life extension, and cost savings in real-time              </p>            </Card>          </div>        </div>      </section>      {/* Interactive Demo Section */}      <section id="demo-section" className="py-16 lg:py-24">        <div className="container mx-auto px-4">          <div className="text-center mb-12">            <h2 className="text-3xl lg:text-4xl font-bold text-foreground mb-4">              Try the Interactive Demo            </h2>            <p className="text-xl text-muted-foreground max-w-2xl mx-auto">              Experience how ShelfLife+ optimizes your vegetable logistics            </p>          </div>          {/* Status Bar */}          <div className="mb-8">            <Card className="p-6">              <div className="flex flex-col md:flex-row md:items-center md:justify-between gap-4">                <div className="flex flex-col sm:flex-row sm:items-center gap-4 sm:gap-6">                  <div className="flex items-center gap-2">                    <Truck className="w-5 h-5 text-muted-foreground" />                    <span className="text-sm text-muted-foreground">Load:</span>                    <Badge variant="secondary" className="font-medium">                      {getTotalQuantity()} units                    </Badge>                  </div>                                    <div className="flex items-center gap-2">                    <AlertCircle className="w-5 h-5 text-muted-foreground" />                    <span className="text-sm text-muted-foreground">Status:</span>                    <Badge                       variant={compatibilityStatus.status === 'compatible' ? 'default' :                               compatibilityStatus.status === 'incompatible' ? 'destructive' : 'secondary'}                    >                      {compatibilityStatus.text}                    </Badge>                  </div>                </div>                                <div className="flex items-center gap-2">                  <BarChart3 className="w-5 h-5 text-fresh-green" />                  <span className="text-sm text-muted-foreground">Powered by</span>                  <span className="font-semibold text-fresh-green">AgriScience</span>                  <Button variant="outline" size="sm" onClick={shareScenario} className="ml-2">                    Share                  </Button>                  <Button variant="ghost" size="sm" onClick={resetScenario}>                    Reset                  </Button>                </div>              </div>            </Card>          </div>          {/* Navigation Tabs */}          <div className="mb-8">            <div className="flex flex-wrap gap-2">              {[                { id: 'input', label: 'Add Vegetables', icon: Leaf },                { id: 'analysis', label: 'Compatibility', icon: AlertCircle },                { id: 'layout', label: 'Truck Layout', icon: Truck },                { id: 'impact', label: 'Impact Analysis', icon: BarChart3 }              ].map(({ id, label, icon: Icon }) => (                <Button                  key={id}                  variant={activeTab === id ? 'default' : 'outline'}                  onClick={() => setActiveTab(id as any)}                  className="flex items-center gap-2"                >                  <Icon className="w-4 h-4" />                  <span className="hidden sm:inline">{label}</span>                  <span className="sm:hidden">{label.split(' ')[0]}</span>                </Button>              ))}            </div>          </div>          {/* Tab Content */}          <div className="space-y-8">            {activeTab === 'input' && (              <div className="grid lg:grid-cols-3 gap-8">                <div className="lg:col-span-2">                  <VegetableInput                     vegetables={vegetables}                     onVegetablesChange={handleVegetablesChange}                   />                </div>                                <div>                  <Card className="p-6">                    <h3 className="text-lg font-semibold mb-4">Quick Start Guide</h3>                    <div className="space-y-4 text-sm">                      {[                        { step: 1, title: 'Add Vegetables', desc: 'Select vegetables and quantities' },                        { step: 2, title: 'Review Analysis', desc: 'Check compatibility issues' },                        { step: 3, title: 'Optimize Layout', desc: 'View truck configuration' },                        { step: 4, title: 'See Impact', desc: 'Track waste reduction' }                      ].map(({ step, title, desc }) => (                        <div key={step} className="flex gap-3">                          <div className="w-6 h-6 rounded-full bg-fresh-green text-white text-xs flex items-center justify-center font-bold flex-shrink-0 mt-0.5">                            {step}                          </div>                          <div>                            <p className="font-medium text-foreground">{title}</p>                            <p className="text-muted-foreground">{desc}</p>                          </div>                        </div>                      ))}                    </div>                  </Card>                  {/* Planning Parameters */}                  <Card className="p-6 mt-8">                    <h3 className="text-lg font-semibold mb-4">Planning Parameters</h3>                    <div className="grid sm:grid-cols-2 gap-4">                      <div>                        <label className="block text-sm text-muted-foreground mb-1">Truck Type</label>                        <select                          className="w-full border rounded-md p-2 bg-background"                          value={meta.truckType}                          onChange={(e) => setMeta((m) => ({ ...m, truckType: e.target.value as any }))}                        >                          <option value="ambient">Ambient</option>                          <option value="refrigerated">Refrigerated</option>                          <option value="ventilated">Ventilated</option>                        </select>                      </div>                      <div>                        <label className="block text-sm text-muted-foreground mb-1">Truck Size</label>                        <select                          className="w-full border rounded-md p-2 bg-background"                          value={meta.truckSize}                          onChange={(e) => setMeta((m) => ({ ...m, truckSize: e.target.value as any }))}                        >                          <option value="small">Small</option>                          <option value="medium">Medium</option>                          <option value="large">Large</option>                        </select>                      </div>                      <div>                        <label className="block text-sm text-muted-foreground mb-1">Truck Quantity</label>                        <input                          type="number"                          min={1}                          className="w-full border rounded-md p-2 bg-background"                          value={meta.truckQuantity}                          onChange={(e) =>                            setMeta((m) => ({ ...m, truckQuantity: Math.max(1, Number(e.target.value || 1)) }))                          }                        />                      </div>                      <div>                        <label className="block text-sm text-muted-foreground mb-1">Best Time to Travel</label>                        <select                          className="w-full border rounded-md p-2 bg-background"                          value={meta.bestTravelTime}                          onChange={(e) => setMeta((m) => ({ ...m, bestTravelTime: e.target.value as any }))}                        >                          <option value="early_morning">Early Morning</option>                          <option value="daytime">Daytime</option>                          <option value="evening">Evening</option>                          <option value="night">Night</option>                        </select>                      </div>                    </div>                    <div className="mt-4 text-sm text-muted-foreground">                      Capacity: {getTotalCapacity()} units • Utilization: {isFinite(utilization) ? utilization : 0}%                    </div>                  </Card>                </div>              </div>            )}                        {/*activeTab === 'analysis' && <CompatibilityAnalysis vegetables={vegetables} />*/}            {activeTab === 'layout' && <TruckVisualizer vegetables={vegetables} />}            {activeTab === 'impact' && <ImpactMetrics vegetables={vegetables} />}          </div>        </div>      </section>      {/* Benefits Section */}      <section id="benefits" className="py-16 lg:py-24 bg-muted/30">        <div className="container mx-auto px-4">          <div className="text-center mb-16">            <h2 className="text-3xl lg:text-4xl font-bold text-foreground mb-4">              Why Choose SHELFLIFE+?            </h2>            <p className="text-xl text-muted-foreground max-w-2xl mx-auto">              Transform your vegetable logistics with science-backed optimization            </p>          </div>          <div className="grid lg:grid-cols-2 gap-12 items-center">            <div className="space-y-8">              <div className="flex gap-4">                <div className="w-12 h-12 bg-fresh-green/10 rounded-lg flex items-center justify-center flex-shrink-0">                  <BarChart3 className="w-6 h-6 text-fresh-green" />                </div>                <div>                  <h3 className="text-xl font-semibold mb-2">40% Waste Reduction</h3>                  <p className="text-muted-foreground">                    Prevent spoilage through optimal vegetable pairing and transport conditions                  </p>                </div>              </div>              <div className="flex gap-4">                <div className="w-12 h-12 bg-fresh-green/10 rounded-lg flex items-center justify-center flex-shrink-0">                  <Truck className="w-6 h-6 text-fresh-green" />                </div>                <div>                  <h3 className="text-xl font-semibold mb-2">Smart Transport Planning</h3>                  <p className="text-muted-foreground">                    AI-powered recommendations for truck configuration and routing                  </p>                </div>              </div>              <div className="flex gap-4">                <div className="w-12 h-12 bg-fresh-green/10 rounded-lg flex items-center justify-center flex-shrink-0">                  <Shield className="w-6 h-6 text-fresh-green" />                </div>                <div>                  <h3 className="text-xl font-semibold mb-2">Science-Based Decisions</h3>                  <p className="text-muted-foreground">                    Every recommendation backed by agricultural biology research                  </p>                </div>              </div>            </div>            <div className="bg-gradient-to-br from-fresh-green to-fresh-green-dark p-8 rounded-2xl text-white">              <h3 className="text-2xl font-bold mb-6">Ready to Get Started?</h3>              <p className="text-white/90 mb-8">                Join the revolution in vegetable logistics. Start reducing waste and increasing profits today.              </p>              <div className="space-y-4">                <Button                   onClick={scrollToDemo}                  size="lg"                   className="w-full bg-white text-fresh-green hover:bg-white/90 font-semibold"                >                  Try Free Demo <ArrowRight className="w-5 h-5 ml-2" />                </Button>                <Button                   size="lg"                  className="w-full bg-white text-fresh-green hover:bg-white/90 font-semibold"                >                  Contact Sales                </Button>              </div>            </div>          </div>        </div>      </section>      {/* Enhanced Footer */}      <footer className="bg-foreground text-background">        <div className="container mx-auto px-4 py-12">          <div className="grid md:grid-cols-4 gap-8">            {/* Company Info */}            <div className="md:col-span-2">              <div className="flex items-center gap-2 mb-4">                <div className="p-2 bg-fresh-green rounded-lg">                  <Leaf className="w-6 h-6 text-white" />                </div>                <div>                  <span className="text-xl font-bold">SHELFLIFE+</span>                </div>              </div>              <p className="text-muted mb-6 max-w-md">                Revolutionizing vegetable logistics through science-based compatibility                 checking and optimized transport planning.              </p>              {/*              <div className="flex gap-4">                <Button variant="outline" size="sm" className="border-muted text-muted hover:bg-muted hover:text-foreground">                  Download App                </Button>              </div>              */}            </div>                        {/* Quick Links */}            <div>              <h4 className="font-semibold mb-4">Product</h4>              <div className="space-y-2 text-sm text-muted">                <a href="#features" className="block hover:text-fresh-green transition-colors">Features</a>                <a href="#demo-section" className="block hover:text-fresh-green transition-colors">Demo</a>                <a href="#benefits" className="block hover:text-fresh-green transition-colors">Benefits</a>                <a href="#" className="block hover:text-fresh-green transition-colors">Pricing</a>              </div>            </div>            {/* Support */}            <div>              <h4 className="font-semibold mb-4">Support</h4>              <div className="space-y-2 text-sm text-muted">                <a href="#" className="block hover:text-fresh-green transition-colors">Help Center</a>                <a href="#" className="block hover:text-fresh-green transition-colors">Contact Us</a>                <a href="#" className="block hover:text-fresh-green transition-colors">API Docs</a>                <a href="#" className="block hover:text-fresh-green transition-colors">Status</a>              </div>            </div>          </div>          <div className="border-t border-muted mt-12 pt-8 flex flex-col md:flex-row md:items-center md:justify-between gap-4">            <div className="text-sm text-muted">              © 2024 ShelfLife+. Reducing food waste through science.            </div>            <div className="flex gap-6 text-sm text-muted">              <a href="#" className="hover:text-fresh-green transition-colors">Privacy</a>              <a href="#" className="hover:text-fresh-green transition-colors">Terms</a>              <a href="#" className="hover:text-fresh-green transition-colors">Cookies</a>            </div>          </div>        </div>      </footer>    </div>  );};export default Index;